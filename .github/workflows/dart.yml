name: Multi-Platform Build

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

env:
  FLUTTER_VERSION: "3.24.0"
  VERSION_TAG: "v1.0.0"

jobs:
  # iOS 构建
  build-ios:
    name: 🍎 iOS Build
    runs-on: macos-latest
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          architecture: x64

      - name: Install Dependencies
        run: flutter pub get

      - name: Update CocoaPods
        run: pod repo update
        working-directory: client/ios

      - name: Build iOS Release
        run: flutter build ios --release --no-codesign

      - name: Create IPA
        run: |
          mkdir Payload
          mv Runner.app/ Payload
          zip -qq -r -9 ichat-ios-${{ env.VERSION_TAG }}.ipa Payload
        working-directory: client/build/ios/iphoneos

      - name: Upload iOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: iOS-Build
          path: client/build/ios/iphoneos/ichat-ios-${{ env.VERSION_TAG }}.ipa

  # Android 构建
  build-android:
    name: 🤖 Android Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install Dependencies
        run: flutter pub get

      - name: Build Android APK
        run: flutter build apk --release

      - name: Build Android App Bundle
        run: flutter build appbundle --release

      - name: Rename Build Files
        run: |
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/ichat-android-${{ env.VERSION_TAG }}.apk
          mv build/app/outputs/bundle/release/app-release.aab build/app/outputs/bundle/release/ichat-android-${{ env.VERSION_TAG }}.aab

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: Android-APK
          path: client/build/app/outputs/flutter-apk/ichat-android-${{ env.VERSION_TAG }}.apk

      - name: Upload Android Bundle
        uses: actions/upload-artifact@v4
        with:
          name: Android-Bundle
          path: client/build/app/outputs/bundle/release/ichat-android-${{ env.VERSION_TAG }}.aab

  # macOS 构建
  build-macos:
    name: 🖥️ macOS Build
    runs-on: macos-latest
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          architecture: x64

      - name: Enable macOS Desktop
        run: flutter config --enable-macos-desktop

      - name: Install Dependencies
        run: flutter pub get

      - name: Update CocoaPods
        run: pod repo update
        working-directory: client/macos

      - name: Build macOS Release
        run: flutter build macos --release

      - name: Create macOS Archive
        run: |
          cd build/macos/Build/Products/Release
          zip -qq -r -9 ../../../../../ichat-macos-${{ env.VERSION_TAG }}.zip ichat.app

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macOS-Build
          path: client/ichat-macos-${{ env.VERSION_TAG }}.zip

  # Windows 构建
  build-windows:
    name: 🪟 Windows Build
    runs-on: windows-latest
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Enable Windows Desktop
        run: flutter config --enable-windows-desktop

      - name: Install Dependencies
        run: flutter pub get

      - name: Build Windows Release
        run: flutter build windows --release

      - name: Create Windows Archive
        run: |
          Compress-Archive -Path "build\windows\x64\runner\Release\*" -DestinationPath "ichat-windows-${{ env.VERSION_TAG }}.zip"

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows-Build
          path: client/ichat-windows-${{ env.VERSION_TAG }}.zip

  # 创建 GitHub Release
  create-release:
    name: 📦 Create Release
    needs: [build-ios, build-android, build-macos, build-windows]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -la artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION_TAG }}
          name: "iChat ${{ env.VERSION_TAG }}"
          body: |
            ## 🎉 iChat ${{ env.VERSION_TAG }}
            
            ### 📱 支持平台
            - **iOS**: iPhone 和 iPad
            - **Android**: 手机和平板
            - **macOS**: Mac 桌面应用
            - **Windows**: Windows 桌面应用
            
            ### 🆕 主要功能
            - 💬 实时聊天消息
            - 👥 好友管理系统
            - 🔔 消息推送通知
            - 📱 跨平台同步
            - 🌙 深色模式支持
            - 🔐 JWT 身份验证
            - 🟢 在线状态显示
            - 📊 未读消息提醒
            
            ### 📥 下载说明
            - **iOS用户**: 下载 `ichat-ios-${{ env.VERSION_TAG }}.ipa` 文件
            - **Android用户**: 下载 `ichat-android-${{ env.VERSION_TAG }}.apk` 文件
            - **macOS用户**: 下载 `ichat-macos-${{ env.VERSION_TAG }}.zip` 文件
            - **Windows用户**: 下载 `ichat-windows-${{ env.VERSION_TAG }}.zip` 文件
            
            ### 🔧 安装说明
            - **iOS**: 需要使用第三方工具如 AltStore 或企业证书安装
            - **Android**: 开启"未知来源应用"后直接安装
            - **macOS**: 解压后拖拽到应用程序文件夹，首次打开需右键选择"打开"
            - **Windows**: 解压后运行 ichat.exe
            
            ### ⚙️ 服务器配置
            本应用需要连接到自己的服务器。请参考项目 README 了解如何部署服务器。
            
            **技术栈**: Flutter + Node.js + Socket.io + MongoDB
            
            ---
            
            **完整跨平台支持 | 原生用户体验 | 开源免费**
          files: |
            artifacts/iOS-Build/ichat-ios-${{ env.VERSION_TAG }}.ipa
            artifacts/Android-APK/ichat-android-${{ env.VERSION_TAG }}.apk
            artifacts/Android-Bundle/ichat-android-${{ env.VERSION_TAG }}.aab
            artifacts/macOS-Build/ichat-macos-${{ env.VERSION_TAG }}.zip
            artifacts/Windows-Build/ichat-windows-${{ env.VERSION_TAG }}.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
